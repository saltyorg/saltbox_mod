---
- name: Remove existing Docker container
  community.docker.docker_container:
    name: "APPNAME"
    state: absent
    container_default_behavior: compatibility
    tls_hostname: localhost

- name: Create and start container
  community.docker.docker_container:
    name: "APPNAME"
    image: "SOMEUSER/SOMEIMAGE"
    pull: true
    volumes:
      - "/mnt:/mnt"
    env:
      SOMEENV: "SOMEVALUE"
    networks:
      - name: saltbox
        aliases:
          - APPNAME
    labels:
      com.github.saltbox.saltbox_managed: "true"
      traefik.enable: "true"
      traefik.http.routers.APPNAME-http.entrypoints: web
      traefik.http.routers.APPNAME-http.middlewares: globalHeaders@file,authelia@docker,redirect-to-https,gzip
      traefik.http.routers.APPNAME-http.rule: Host(`APPNAME.DOMAIN.TLD`)
      traefik.http.routers.APPNAME-http.service: APPNAME
      traefik.http.routers.APPNAME.entrypoints: "websecure"
      traefik.http.routers.APPNAME.middlewares: "secureHeaders@file"
      traefik.http.routers.APPNAME.rule: "Host(`APPNAME.DOMAIN.TLD`)"
      traefik.http.routers.APPNAME.service: "APPNAME"
      traefik.http.routers.APPNAME.tls.certresolver: "cfdns"
      traefik.http.routers.APPNAME.tls.options: "securetls@file"
      traefik.http.services.APPNAME.loadbalancer.server.port: "80"
    networks_cli_compatible: true
    network_mode: "{{ docker_networks_name_common }}"
    container_default_behavior: compatibility
    purge_networks: true
    restart_policy: unless-stopped
    state: started

- name: Debug Test
  ansible.builtin.debug:
    msg: "Test var is {{ some_var }}"
